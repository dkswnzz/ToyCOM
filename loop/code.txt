; Toycom2 dkswnzz

0000:	fe 83	; 10000 011 1111 1110 // BR 400h (offset 400h-2h)

0400:	00 09	; 00001 001 0000 0000 // LDI R1 #0 (R1 초기화)

0402:	fc f8	; 11111 000 1111 1100 // CALL 500h (offset 500h-404h) 서브루틴 함수 

0404:	00 0c	; 00001 100 0000 0000 // LDI R4 #0h (R4초기화: 단수)

0406:	00 0a	; 00001 010 0000 0000 // LDI R2 #0h (R2 초기화: 결과 값)

0408:	f6 f9	; 11111 001 1111 0110	CALL 600h	( 1단  offset = 600h-40Ah) 

040A:	f4 f9	; 11111 001 1111 0100	CALL 600h	( 2단  offset = 600h-40Ch)

040C:	f2 f9	; 11111 001 1111 0010	CALL 600h	( 3단  offset = 600h-40Eh)

040E:	f0 f9	; 11111 001 1111 0000	CALL 600h	( 4단  offset = 600h-410h)

0410:	ee f9	; 11111 001 1110 1110	CALL 600h	( 5단  offset = 600h-412h)

0412:	ec f9	; 11111 001 1110 1100	CALL 600h	( 6단  offset = 600h-414h)

0414:	ea f9	; 11111 001 1110 1010	CALL 600h	( 7단  offset = 600h-416h)

0416:	e8 f9	; 11111 001 1110 1000	CALL 600h	( 8단  offset = 600h-418h)

0418:	e6 f9	; 11111 001 1110 0110	CALL 600h	( 9단  offset = 600h-41Ah)




; 서브루틴 함수
0500:	01 08	; 00001 000 0000 0001	LDI R0 #1h	( R0 = 1)	
0502:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=1)

0504:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 2 )
0506:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=3)

0508:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 3 )
050A:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=6)

050C:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 4 )
050E:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=10)

0510:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 5 )
0512:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=15)

0514:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 6 )
0516:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=21)

0518:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 7 )
051A:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0	( R1=R1+R0=28)

051C:	00 20	; 00100 000 000 000 00	INC R0		( R0 = 8 )
051E:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=36)

0520:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 9 )
0522:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0	( R1=R1+R0=45)

0524:	00 20	; 00100 000 000 000 00	INC R0 		( R0 = 10 )
0526:	20 29	; 00101 001 001 000 00	ADD R1,R1,R0 	( R1=R1+R0=55)

0528:	00 48	; 01001 000 000 000 00	RET 		( 함수 종료 )


; 구구단 단수
0600:	4a 2a	; 00101 010 010 010 10	SUB R2,R2,R2  	(R2 초기화 R2 = 0)

0602:	00 24	; 00100 100 000 000 00	INC R4		(단수 1증가)

0604:	fa f8	; 11111 000 1111 1010	CALL 700h	(값 호출  offset=700h-606h)

0606:	00 48	; 01001 000 000 000 00	RET 		( 함수 종료 )	


; 구구단 결과 
0700:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 1 )	
	
0702:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 2 )

0704:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 3 )

0706:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 4 )

0708:	50 2a 	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 5 )

070A:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 6 )

070C:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 7 )

070E:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 8 )

0710:	50 2a	; 00101 010 010 100 00	ADD R2,R2,R4	( R2 = R4 x 9 )	

0712:	00 48	; 01001 000 000 000 00	RET ( 함수 종료 )
